const r=e=>({toBeOneOf(t){return Object.values(t).includes(e)}}),o=(e,t)=>Object.keys(e).filter(t).reduce((n,c)=>({...n,[c]:e[c]}),{}),u=(e,t)=>{const n={};return Object.entries(e).forEach(([c,s])=>{t.includes(c)||(n[c]=s)}),n};export{r as e,o as p,u as w};
